## UserFrosting sample nginx configuration file.
## See https://learn.userfrosting.com/going-live/vps-production-environment/application-setup#configure-the-webserver-nginx-

## Redirect HTTP to HTTPS
## Enable this block once you've set up SSL.  This will redirect all HTTP requests to HTTPS.
#server {
#    listen 80;
#    server_name cclloyd.com;
#    return 301 https://$host$request_uri;
#}

## Main server configuration
server {
	listen 80;

	index index.php index.html index.htm;

	root /var/www/cclloyd/public;
	server_name cclloyd.com;


	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	ssl_certificate /etc/letsencrypt/live/cclloyd.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/cclloyd.com/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 5m;
	ssl_prefer_server_ciphers on;
	ssl_dhparam /etc/nginx/dhparam.pem; # google will tell you how to make this
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	resolver 8.8.8.8;
	ssl_stapling on;
	ssl_trusted_certificate /etc/letsencrypt/live/cclloyd.com/fullchain.pem; # same as your ssl_certificate path
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

	access_log /var/log/nginx/access.log;

	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	## This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
	add_header X-XSS-Protection "1; mode=block"; #optional


	## Begin - Pagespeed
	## See https://learn.userfrosting.com/going-live/vps-production-environment/additional-recommendations
	## for information on compiling nginx with the Pagespeed module.
	#pagespeed on;
	#pagespeed FileCachePath /var/ngx_pagespeed_cache;
	#pagespeed Disallow "*.svg*";
	## Add additional filters here
	#pagespeed EnableFilters prioritize_critical_css;
	## Ensure requests for pagespeed optimized resources go to the pagespeed 
	## handler and no extraneous headers get set.
	#location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
	#location ~ "^/ngx_pagespeed_static/" { }
	#location ~ "^/ngx_pagespeed_beacon" { }
	## End - Pagespeed


	## Begin - Let's Encrypt
	## Allow URLs for certbot acme challenge
	location ~ /.well-known {
		allow all;
	}
	## End - Let's Encrypt


	## Begin - Handle PHP requests
	location ~ \.(php)$ {
		# Throw away any requests to execute PHP scripts in other directories
		# See http://cnedelcu.blogspot.com/2010/05/nginx-php-via-fastcgi-important.html for why this is needed
		location ~ \..*/.*\.php$ {
			return 404;
		}
		# regex to split $uri to $fastcgi_script_name and $fastcgi_path
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_keep_conn on;
		# For FPM (PHP 7)
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		# For FPM (PHP 5.x)
		#fastcgi_pass unix:/var/run/php5-fpm.sock;
		# For traditional PHP FastCGI (php5-cgi or php7.0-cgi)
		#fastcgi_pass 127.0.0.1:9000;
		# For HHVM
		#fastcgi_pass unix:/var/run/hhvm/hhvm.sock;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include        fastcgi_params;
	}
	## End - Handle PHP requests


	## Begin - Caching static files
	location ~* \.(png|gif|jpg|jpeg|svg|ico|css|js|woff|ttf|otf|woff2|eot)$ {
		include /etc/nginx/mime.types;
		expires max;

		index index.php;
		try_files $uri $uri/ /index.php?$query_string;
	}
	## End - Caching static files


	## Begin - Index
	## for subfolders, simply adjust:
	## `location /subfolder {`
	## and the rewrite to use `/subfolder/index.php`
	location / {
		include /etc/nginx/mime.types;
		index index.php;
		try_files $uri $uri/ /index.php?$query_string;
	}
	## End - Index
	
	
}